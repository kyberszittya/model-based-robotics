// automatically generated by Xtext
grammar hu.sze.aut.robotlabor.scene.description.SceneDsl with org.eclipse.xtext.common.Terminals

import "http://aut.sze.hu/scene" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


RootElement returns RootElement:
	Scene | Model
;

Model returns Model:
	ExternalModel | Sphere | Box | Cylinder | Floor | WallElement;



Material returns Material:
	Color | Texture;



EString returns ecore::EString:
	STRING | ID;

Scene returns Scene:
	{Scene}
	'scene'
	name=EString
	'{'
		('models' '{' model+=Model (model+=Model)* '}' )?
	'}';

ExternalModel returns ExternalModel:
	{ExternalModel}
	'externalmodel'
	name=EString
	'{'
		('path' path=EString)?
		('placement' placement=Placement)?
	'}';

Sphere returns Sphere:
	{Sphere}
	'sphere'
	name=EString
	'{'
		('radius' radius=EDouble)?
		('placement' placement=Placement)?
		('physicparameters' physicparameters=PhysicParameters )?
		('material' material=Material)?
	'}';

Box returns Box:
	{Box}
	'box'
	name=EString
	'{'
		('width' width=EDouble)?
		('height' height=EDouble)?
		('depth' depth=EDouble)?
		('placement' placement=Placement)?
		('physicparameters' physicparameters=PhysicParameters)?
		('material' material=Material)?
	'}';

Cylinder returns Cylinder:
	{Cylinder}
	'cylinder'
	name=EString
	'{'
		('radius' radius=EDouble)?
		('height' height=EDouble)?
		('placement' placement=Placement)?
		('physicparameters' physicparameters=PhysicParameters)?
		('material' material=Material)?
	'}';

Floor returns Floor:
	{Floor}
	'floor'
	name=EString
	'{'
		('placement' placement=Placement)?
		('physicparameters' physicparameters=PhysicParameters)?
		('material' material=Material)?
	'}';

WallElement returns WallElement:
	{WallElement}
	'wall'
	name=EString
	'{'
		('width' width=EDouble)?
		('height' height=EDouble)?
		('placement' placement=Placement)?
		('physicparameters' physicparameters=PhysicParameters)?
		('material' material=Material)?
	'}';

Placement returns Placement:
	{Placement}
	'{'
		('position' position=Vec3)?
		('rotation' rotation=Rotation)?
	'}';

Vec3 returns Vec3:
	{Vec3}
	'{'
		('x' x=EDouble)?
		('y' y=EDouble)?
		('z' z=EDouble)?
	'}';

Rotation returns Rotation:
	{Rotation}
	'{'
		('roll' roll=EDouble)?
		('pitch' pitch=EDouble)?
		('yaw' yaw=EDouble)?
	'}';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

PhysicParameters returns PhysicParameters:
	{PhysicParameters}
	'{'
		('mass' mass=EDouble)?
	'}';

Color returns Color:
	{Color}
	'color'
	'{'
		('red' red=EDouble)?
		('green' green=EDouble)?
		('blue' blue=EDouble)?
		('alpha' alpha=EDouble)?
	'}';

Texture returns Texture:
	{Texture}
	'texture'
	'{'
		('path' path=EString)?
	'}';

