/*
 * generated by Xtext 2.23.0
 */
package hu.sze.aut.robot.description.scene.formatting2

import com.google.inject.Inject
import hu.sze.aut.robot.description.scene.ExternalModel
import hu.sze.aut.robot.description.scene.Scene
import hu.sze.aut.robot.description.scene.services.SceneDslGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class SceneDslFormatter extends AbstractFormatter2 {
	
	@Inject extension SceneDslGrammarAccess

	def dispatch void format(Scene scene, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (model : scene.model) {
			model.format
		}
	}

	def dispatch void format(ExternalModel externalModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		externalModel.placement.format
	}
	
	// TODO: implement for Sphere, Box, Cylinder, Floor, WallElement, Placement
}
